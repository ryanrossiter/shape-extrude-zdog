{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a6ff6ee538667d6456fd.hot-update.js","sources":["webpack:///./src/components/ShapeExtrusion.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Anchor, Ellipse, Cylinder, Box, Hemisphere, Rect, RoundedRect, Group, Shape, Polygon } from 'react-zdog';\r\n\r\nimport { AmpShape } from '../shapes/letters';\r\n\r\nconst DARK_AQUA = \"#84DCC6\";\r\nconst LIGHT_AQUA = \"#A5FFD6\";\r\nconst LIGHT_RED = \"#FFA69E\";\r\nconst DARK_RED = \"#FF686B\";\r\nconst YELLOW = \"#FFCE49\";\r\n\r\nexport default class ShapeExtrusion extends Component {\r\n    render() {\r\n        let { fill=true, color=\"#333\", sideColor=\"#BBB\", depth=30, spacing=1, stroke=1, sideStroke, rotate, ...props } = this.props;\r\n\r\n        let sc = sideColor;\r\n        if (typeof sc !== \"function\") {\r\n            sc = (v) => sideColor;\r\n        }\r\n\r\n        let sp = spacing;\r\n        if (typeof sp !== \"function\") {\r\n            sp = (i, v) => ({ x: 0, y: 0, z: i * spacing });\r\n        }\r\n\r\n        return (\r\n            <Anchor>\r\n                <Group rotate={rotate}>\r\n                    {[...Array(depth)].map((n, i) => (\r\n                        <AmpShape\r\n                            color={ i === (depth - 1)? color : sideColor(i / (depth - 1)) }\r\n                            translate={spacing(i, i / (depth - 1))}\r\n                            fill={ fill && (i === 0 || i === (depth - 1)) }\r\n                            stroke={ i === (depth - 1)? stroke : (sideStroke? sideStroke : stroke) }\r\n                            {...props} />\r\n                    ))}\r\n                </Group>\r\n            </Anchor>\r\n        );\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AADA;AAWA;;;;AA5BA;AACA;;;;;A","sourceRoot":""}